//!file:grafbase/options.proto
syntax = "proto2";

import "google/protobuf/descriptor.proto";

package grafbase.graphql;

extend google.protobuf.MessageOptions {
  optional string object_directives = 58301;
  optional string input_object_directives = 58302;
}

extend google.protobuf.FieldOptions {
  optional string output_field_directives = 58301;
  optional string input_field_directives = 58302;
}

extend google.protobuf.EnumOptions {
  optional string enum_directives = 58301;
}

extend google.protobuf.EnumValueOptions {
  optional string enum_value_directives = 58301;
}

extend google.protobuf.ServiceOptions {
  optional bool default_to_query_fields = 58301;
  optional bool default_to_mutation_fields = 58302;
  optional string subgraph_name = 58303;
  optional string schema_directives = 58304;
}

extend google.protobuf.MethodOptions {
  optional string directives = 58301;
  optional bool is_query = 58302;
  optional bool is_mutation = 58303;
}

//!file:schema_directives.proto
syntax = "proto3";

import "grafbase/options.proto";

package test.schema;

// Test services with different schema directives
service FirstService {
  option (grafbase.graphql.schema_directives) = "@contact(name: \"API Support\", url: \"https://api.example.com/support\")";
  
  rpc GetItem(GetItemRequest) returns (Item);
}

service SecondService {
  option (grafbase.graphql.schema_directives) = "@tag(name: \"backend\")";
  
  rpc UpdateItem(UpdateItemRequest) returns (Item);
}

service ThirdService {
  option (grafbase.graphql.schema_directives) = "@contact(name: \"API Support\", url: \"https://api.example.com/support\")";
  option (grafbase.graphql.subgraph_name) = "items";
  
  rpc DeleteItem(DeleteItemRequest) returns (DeleteItemResponse);
}

// This service has no schema directives
service FourthService {
  rpc ListItems(ListItemsRequest) returns (ListItemsResponse);
}

// Multi-directive service
service FifthService {
  option (grafbase.graphql.schema_directives) = "@tag(name: \"experimental\") @auth(rules: [{allow: \"admin\"}])";
  
  rpc CreateItem(CreateItemRequest) returns (Item);
}

// Service in same subgraph with different directives (to test deduplication)
service SixthService {
  option (grafbase.graphql.schema_directives) = "@tag(name: \"backend\")";
  option (grafbase.graphql.subgraph_name) = "items";
  
  rpc GetItemDetails(GetItemRequest) returns (Item);
}

// Messages
message Item {
  string id = 1;
  string name = 2;
  string description = 3;
}

message GetItemRequest {
  string id = 1;
}

message UpdateItemRequest {
  string id = 1;
  string name = 2;
  string description = 3;
}

message CreateItemRequest {
  string name = 1;
  string description = 2;
}

message DeleteItemRequest {
  string id = 1;
}

message DeleteItemResponse {
  bool success = 1;
}

message ListItemsRequest {
  int32 limit = 1;
  string cursor = 2;
}

message ListItemsResponse {
  repeated Item items = 1;
  string next_cursor = 2;
}