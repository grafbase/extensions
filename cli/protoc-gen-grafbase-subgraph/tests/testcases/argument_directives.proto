//!file:argument_directives.proto
syntax = "proto3";

import "grafbase/options.proto";

package test.input_arg_directives;

// Test service with input argument directives on methods
service UserService {
  // Method with a single directive on input argument
  rpc CreateUser(CreateUserRequest) returns (User) {
    option (grafbase.graphql.argument_directives) = "@constraint(minLength: 1)";
  }

  // Method with multiple directives on input argument
  rpc UpdateUser(UpdateUserRequest) returns (User) {
    option (grafbase.graphql.argument_directives) = "@constraint(minLength: 1) @auth(rules: [{allow: owner}])";
  }

  // Method with no input argument directives
  rpc GetUser(GetUserRequest) returns (User) {
    option (grafbase.graphql.is_query) = true;
  }

  // Method with both input argument directives and method directives
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (grafbase.graphql.argument_directives) = "@constraint(format: \"uuid\")";
    option (grafbase.graphql.directives) = "@deprecated(reason: \"Use removeUser instead\")";
  }
}

// Another service to test different patterns
service AdminService {
  // Query method with validation directive
  rpc SearchUsers(SearchUsersRequest) returns (SearchUsersResponse) {
    option (grafbase.graphql.is_query) = true;
    option (grafbase.graphql.argument_directives) = "@constraint(maxLength: 100)";
  }
}

// Messages
message User {
  string id = 1;
  string name = 2;
  string email = 3;
}

message CreateUserRequest {
  string name = 1;
  string email = 2;
}

message UpdateUserRequest {
  string id = 1;
  string name = 2;
  string email = 3;
}

message GetUserRequest {
  string id = 1;
}

message DeleteUserRequest {
  string id = 1;
}

message DeleteUserResponse {
  bool success = 1;
}

message SearchUsersRequest {
  string query = 1;
  int32 limit = 2;
}

message SearchUsersResponse {
  repeated User users = 1;
  int32 total_count = 2;
}
