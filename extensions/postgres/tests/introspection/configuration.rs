use crate::PgTestApi;
use indoc::indoc;

#[tokio::test]
async fn globally_disabled_mutations() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                CONSTRAINT "b_to_a" FOREIGN KEY (id) REFERENCES "a"."users"(id)
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"
        enable_mutations = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
      """
      Order User results by Loser fields
      """
      loser: LoserOrderByInput
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      Filter by the related Loser object
      """
      loser: LoserFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
      """
      Order Loser results by User fields
      """
      user: UserOrderByInput
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      Filter by the related User object
      """
      user: UserFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
      loser: Loser @pgRelation(name: "b_to_a")
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
      user: User! @pgRelation(name: "b_to_a", fields: ["id"], references: ["id"])
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }
    "#);
}

#[tokio::test]
async fn globally_disabled_queries() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
                CONSTRAINT "b_to_a" FOREIGN KEY (id) REFERENCES "a"."users"(id)
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"
        enable_queries = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      Filter by the related Loser object
      """
      loser: LoserFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      Filter by the related User object
      """
      user: UserFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_mutations_per_schema() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        [schemas.b]
        enable_mutations = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_queries_per_schema() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        [schemas.b]
        enable_queries = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_mutations_per_table() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."woof" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        [schemas.b.tables.losers]
        enable_mutations = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Specifies the ordering for Woof results.
    """
    input WoofOrderByInput @oneOf {
      """
      Order woofs by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Woof objects for subgraph joins.
    """
    input WoofManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Input for creating a new Woof
    """
    input WoofCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Woof
    """
    input WoofUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Woof object
    """
    type WoofReturning
      @pgReturning(type: "Woof")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Woof
    """
    type WoofCreatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many woofs
    """
    type WoofCreateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Woof
    """
    type WoofUpdatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many woofs
    """
    type WoofUpdateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Woof
    """
    type WoofDeletePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many woofs
    """
    type WoofDeleteManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type WoofEdge {
      """
      The item at the end of the edge
      """
      node: Woof! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Woof
    """
    type WoofConnection
      @pgConnection(type: "Woof")
    {
      """
      A list of edges
      """
      edges: [WoofEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
      """
      Query a unique Woof
      """
      woof(
        """
        Input for unique Woof lookup
        """
        lookup: WoofLookupInput!,
      ): Woof @pgSelectOne
      """
      Query and paginate multiple woofs
      """
      woofs(
        """
        Filter for Woof
        """
        filter: WoofFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [WoofOrderByInput!],
      ): WoofConnection! @pgSelectMany
      """
      Lookup multiple woofs for subgraph joins
      """
      woofLookup(
        """
        Filter woofs with an array of keys
        """
        lookup: WoofManyLookupInput @inaccessible,
      ): [Woof]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Woof
      """
      woofCreate(
        """
        Input for creating a single Woof
        """
        input: WoofCreateInput!,
      ): WoofCreatePayload! @pgInsertOne
      """
      Create multiple woofs
      """
      woofCreateMany(
        """
        Input for creating multiple Woof instances
        """
        input: [WoofCreateInput!]!,
      ): WoofCreateManyPayload! @pgInsertMany
      """
      Update a unique Woof
      """
      woofUpdate(
        """
        Lookup input for unique Woof update
        """
        lookup: WoofLookupInput!,
        """
        Input for updating a Woof
        """
        input: WoofUpdateInput!,
      ): WoofUpdatePayload! @pgUpdateOne
      """
      Update multiple woofs
      """
      woofUpdateMany(
        """
        Filter for updating multiple Woof instances
        """
        filter: WoofFilterInput,
        """
        Input for updating multiple Woof instances
        """
        input: WoofUpdateInput!,
      ): WoofUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Woof
      """
      woofDelete(
        """
        Lookup input for unique Woof deletion
        """
        lookup: WoofLookupInput!,
      ): WoofDeletePayload! @pgDeleteOne
      """
      Delete multiple woofs
      """
      woofDeleteMany(
        """
        Filter for Woof deletion
        """
        filter: WoofFilterInput,
      ): WoofDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_queries_per_table() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."woof" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        [schemas.b.tables.losers]
        enable_queries = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Woof results.
    """
    input WoofOrderByInput @oneOf {
      """
      Order woofs by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Woof objects for subgraph joins.
    """
    input WoofManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Input for creating a new Woof
    """
    input WoofCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Woof
    """
    input WoofUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type containing fields of the mutated or created Woof object
    """
    type WoofReturning
      @pgReturning(type: "Woof")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Woof
    """
    type WoofCreatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many woofs
    """
    type WoofCreateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Woof
    """
    type WoofUpdatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many woofs
    """
    type WoofUpdateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Woof
    """
    type WoofDeletePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many woofs
    """
    type WoofDeleteManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type WoofEdge {
      """
      The item at the end of the edge
      """
      node: Woof! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Woof
    """
    type WoofConnection
      @pgConnection(type: "Woof")
    {
      """
      A list of edges
      """
      edges: [WoofEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Woof
      """
      woof(
        """
        Input for unique Woof lookup
        """
        lookup: WoofLookupInput!,
      ): Woof @pgSelectOne
      """
      Query and paginate multiple woofs
      """
      woofs(
        """
        Filter for Woof
        """
        filter: WoofFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [WoofOrderByInput!],
      ): WoofConnection! @pgSelectMany
      """
      Lookup multiple woofs for subgraph joins
      """
      woofLookup(
        """
        Filter woofs with an array of keys
        """
        lookup: WoofManyLookupInput @inaccessible,
      ): [Woof]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Woof
      """
      woofCreate(
        """
        Input for creating a single Woof
        """
        input: WoofCreateInput!,
      ): WoofCreatePayload! @pgInsertOne
      """
      Create multiple woofs
      """
      woofCreateMany(
        """
        Input for creating multiple Woof instances
        """
        input: [WoofCreateInput!]!,
      ): WoofCreateManyPayload! @pgInsertMany
      """
      Update a unique Woof
      """
      woofUpdate(
        """
        Lookup input for unique Woof update
        """
        lookup: WoofLookupInput!,
        """
        Input for updating a Woof
        """
        input: WoofUpdateInput!,
      ): WoofUpdatePayload! @pgUpdateOne
      """
      Update multiple woofs
      """
      woofUpdateMany(
        """
        Filter for updating multiple Woof instances
        """
        filter: WoofFilterInput,
        """
        Input for updating multiple Woof instances
        """
        input: WoofUpdateInput!,
      ): WoofUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Woof
      """
      woofDelete(
        """
        Lookup input for unique Woof deletion
        """
        lookup: WoofLookupInput!,
      ): WoofDeletePayload! @pgDeleteOne
      """
      Delete multiple woofs
      """
      woofDeleteMany(
        """
        Filter for Woof deletion
        """
        filter: WoofFilterInput,
      ): WoofDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn schema_mutations_setting_takes_precedence_over_global_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_mutations = false

        [schemas.b]
        enable_mutations = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn schema_queries_setting_takes_precedence_over_global_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_queries = false

        [schemas.b]
        enable_queries = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn table_mutations_setting_takes_precedence_over_global_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_mutations = false

        [schemas.b.tables.losers]
        enable_mutations = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn table_queries_setting_takes_precedence_over_global_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_queries = false

        [schemas.b]
        enable_queries = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn table_mutations_setting_takes_precedence_over_schema_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."woof" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_mutations = true

        [schemas.b]
        enable_mutations = false

        [schemas.b.tables.losers]
        enable_mutations = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Woof results.
    """
    input WoofOrderByInput @oneOf {
      """
      Order woofs by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Woof objects for subgraph joins.
    """
    input WoofManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type WoofEdge {
      """
      The item at the end of the edge
      """
      node: Woof! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Woof
    """
    type WoofConnection
      @pgConnection(type: "Woof")
    {
      """
      A list of edges
      """
      edges: [WoofEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
      """
      Query a unique Woof
      """
      woof(
        """
        Input for unique Woof lookup
        """
        lookup: WoofLookupInput!,
      ): Woof @pgSelectOne
      """
      Query and paginate multiple woofs
      """
      woofs(
        """
        Filter for Woof
        """
        filter: WoofFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [WoofOrderByInput!],
      ): WoofConnection! @pgSelectMany
      """
      Lookup multiple woofs for subgraph joins
      """
      woofLookup(
        """
        Filter woofs with an array of keys
        """
        lookup: WoofManyLookupInput @inaccessible,
      ): [Woof]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn table_queries_setting_takes_precedence_over_schema_setting() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."woof" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        enable_queries = true

        [schemas.b]
        enable_queries = false

        [schemas.b.tables.losers]
        enable_queries = true
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Input for creating a new Woof
    """
    input WoofCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Woof
    """
    input WoofUpdateInput {
      _: Boolean
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Woof object
    """
    type WoofReturning
      @pgReturning(type: "Woof")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Woof
    """
    type WoofCreatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many woofs
    """
    type WoofCreateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Woof
    """
    type WoofUpdatePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many woofs
    """
    type WoofUpdateManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Woof
    """
    type WoofDeletePayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: WoofReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many woofs
    """
    type WoofDeleteManyPayload
      @pgMutation(type: "Woof")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [WoofReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Woof
      """
      woofCreate(
        """
        Input for creating a single Woof
        """
        input: WoofCreateInput!,
      ): WoofCreatePayload! @pgInsertOne
      """
      Create multiple woofs
      """
      woofCreateMany(
        """
        Input for creating multiple Woof instances
        """
        input: [WoofCreateInput!]!,
      ): WoofCreateManyPayload! @pgInsertMany
      """
      Update a unique Woof
      """
      woofUpdate(
        """
        Lookup input for unique Woof update
        """
        lookup: WoofLookupInput!,
        """
        Input for updating a Woof
        """
        input: WoofUpdateInput!,
      ): WoofUpdatePayload! @pgUpdateOne
      """
      Update multiple woofs
      """
      woofUpdateMany(
        """
        Filter for updating multiple Woof instances
        """
        filter: WoofFilterInput,
        """
        Input for updating multiple Woof instances
        """
        input: WoofUpdateInput!,
      ): WoofUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Woof
      """
      woofDelete(
        """
        Lookup input for unique Woof deletion
        """
        lookup: WoofLookupInput!,
      ): WoofDeletePayload! @pgDeleteOne
      """
      Delete multiple woofs
      """
      woofDeleteMany(
        """
        Filter for Woof deletion
        """
        filter: WoofFilterInput,
      ): WoofDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_queries_globally_for_views() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE VIEW "a"."meow" AS SELECT id FROM "a"."users"
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE VIEW "b"."woof" AS SELECT id FROM "b"."losers"
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"
        enable_queries = false

        [schemas.a.views.meow.columns.id]
        unique = true
        nullable = false

        [schemas.b.views.woof.columns.id]
        unique = true
        nullable = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Input type to select a unique Meow
    """
    input MeowLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Meow collections
    """
    input MeowCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: MeowFilterInput
    }

    """
    Filter input type for Meow objects.
    """
    input MeowFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [MeowFilterInput]
      """
      None of the filters must match
      """
      NONE: [MeowFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [MeowFilterInput]
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Meow
      @key(fields: "id")
      @pgTable(name: "meow", schema: "a", kind: VIEW)
      @pgKey(fields: ["id"], type: UNIQUE)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b", kind: VIEW)
      @pgKey(fields: ["id"], type: UNIQUE)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}

#[tokio::test]
async fn disable_queries_per_view() {
    let api = PgTestApi::new("", |api| async move {
        api.execute_sql("CREATE SCHEMA a").await;
        api.execute_sql("CREATE SCHEMA b").await;

        let schema = indoc! {r#"
            CREATE TABLE "a"."users" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE VIEW "a"."meow" AS SELECT id FROM "a"."users"
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE TABLE "b"."losers" (
                id INT PRIMARY KEY GENERATED ALWAYS AS IDENTITY
            )
        "#};

        api.execute_sql(schema).await;

        let schema = indoc! {r#"
            CREATE VIEW "b"."woof" AS SELECT id FROM "b"."losers"
        "#};

        api.execute_sql(schema).await;
    })
    .await;

    let config = indoc! {r#"
        extension_url = "https://grafbase.com/extensions/postgres/0.3.0"

        [schemas.a.views.meow.columns.id]
        unique = true
        nullable = false

        [schemas.b.views.woof.columns.id]
        unique = true
        nullable = false

        [schemas.b.views.woof]
        enable_queries = false
    "#};

    let result = api.introspect_with_config(config).await;

    insta::assert_snapshot!(&result, @r#"
    extend schema
      @link(
        url: "https://grafbase.com/extensions/postgres/0.3.0",
        import: [
          "@pgDatabase",
          "@pgTable",
          "@pgColumn",
          "@pgEnum",
          "@pgEnumVariant",
          "@pgRelation",
          "@pgKey",
          "@pgLookup",
          "@pgSelectOne",
          "@pgSelectMany",
          "@pgInsertOne",
          "@pgInsertMany",
          "@pgUpdateOne",
          "@pgUpdateMany",
          "@pgDeleteOne",
          "@pgDeleteMany",
          "@pgConnection",
          "@pgMutation",
          "@pgReturning",
          "PgKeyType",
          "PgColumnType",
          "PgRelationType"
        ]
      )
      @link(
        url: "https://specs.grafbase.com/composite-schema/v1",
        import: [
          "@lookup",
          "@key"
        ]
      )
      @link(
        url: "https://specs.apollo.dev/federation/v2.3",
        import: [
          "@shareable",
          "@inaccessible"
        ]
      )
      @pgDatabase(name: "default")

    """
    Arbitrary JSON object
    """
    scalar JSON

    """
    Binary data type, represented as a string containing a hexadecimal value
    """
    scalar Bytes

    """
    Big integer data type, represented as a string containing a numeric value
    """
    scalar BigInt

    """
    Decimal data type with arbitrary precision, represented as a string containing a numeric value
    """
    scalar Decimal

    """
    UUID data type represented as a string in the format xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx
    """
    scalar UUID

    """
    Date data type represented as a string in ISO 8601 format (YYYY-MM-DD)
    """
    scalar Date

    """
    Time data type represented as a string in ISO 8601 format (HH:MM:SS or HH:MM:SS.sss)
    """
    scalar Time

    """
    Time with time zone data type represented as a string in format (HH:MM:SS.sssZ or HH:MM:SS.sss+HH:MM)
    """
    scalar TimeWithTimezone

    """
    Timestamp data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sss)
    """
    scalar Timestamp

    """
    DateTime with time zone data type represented as a string in ISO 8601 format (YYYY-MM-DDTHH:MM:SS.sssZ or YYYY-MM-DDTHH:MM:SS.sss+HH:MM)
    """
    scalar DateTime

    """
    IPv4 or IPv6 network address represented as a string (e.g., '192.168.0.1' or '2001:db8::1')
    """
    scalar Inet

    """
    IPv4 or IPv6 network address space represented as a string (e.g., '192.168.0.1/24' or '2001:db8::1/64')
    """
    scalar CIDR

    """
    MAC address data type represented as a string in the format 'XX:XX:XX:XX:XX:XX'
    """
    scalar MacAddr

    """
    Currency amount data type represented as a string with a numeric value and optional currency symbol
    """
    scalar Money

    """
    Bit string data type represented as a string of 0s and 1s
    """
    scalar BitString

    """
    XML data type represented as a string
    """
    scalar XML

    """
    Specifies the direction for ordering results.
    """
    enum OrderDirection {
      """
      Specifies an ascending order for a given orderBy argument.
      """
      ASC
      """
      Specifies a descending order for a given orderBy argument.
      """
      DESC
    }

    """
    Specifies the ordering for User results.
    """
    input UserOrderByInput @oneOf {
      """
      Order users by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for User objects for subgraph joins.
    """
    input UserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique User
    """
    input UserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for User collections
    """
    input UserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: UserFilterInput
    }

    """
    Filter input type for User objects.
    """
    input UserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [UserFilterInput]
      """
      None of the filters must match
      """
      NONE: [UserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [UserFilterInput]
    }

    """
    Input for creating a new User
    """
    input UserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing User
    """
    input UserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Loser results.
    """
    input LoserOrderByInput @oneOf {
      """
      Order losers by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Loser objects for subgraph joins.
    """
    input LoserManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Loser
    """
    input LoserLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Loser collections
    """
    input LoserCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: LoserFilterInput
    }

    """
    Filter input type for Loser objects.
    """
    input LoserFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [LoserFilterInput]
      """
      None of the filters must match
      """
      NONE: [LoserFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [LoserFilterInput]
    }

    """
    Input for creating a new Loser
    """
    input LoserCreateInput {
      _: Boolean
    }

    """
    Input for updating an existing Loser
    """
    input LoserUpdateInput {
      _: Boolean
    }

    """
    Specifies the ordering for Meow results.
    """
    input MeowOrderByInput @oneOf {
      """
      Order meows by id
      """
      id: OrderDirection
    }

    """
    Lookup input type for Meow objects for subgraph joins.
    """
    input MeowManyLookupInput @oneOf @inaccessible {
      """
      Select by the 'id' field
      """
      id: [Int!] @inaccessible
    }

    """
    Input type to select a unique Meow
    """
    input MeowLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Meow collections
    """
    input MeowCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: MeowFilterInput
    }

    """
    Filter input type for Meow objects.
    """
    input MeowFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [MeowFilterInput]
      """
      None of the filters must match
      """
      NONE: [MeowFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [MeowFilterInput]
    }

    """
    Input type to select a unique Woof
    """
    input WoofLookupInput @oneOf {
      """
      Select by the 'id' field
      """
      id: Int
    }

    """
    Filter input type for Woof collections
    """
    input WoofCollectionFilterInput {
      """
      The object is related to an object with the given fields
      """
      contains: WoofFilterInput
    }

    """
    Filter input type for Woof objects.
    """
    input WoofFilterInput @oneOf {
      """
      Filter by the given id
      """
      id: IntFilterInput
      """
      All of the filters must match
      """
      ALL: [WoofFilterInput]
      """
      None of the filters must match
      """
      NONE: [WoofFilterInput]
      """
      At least one of the filters must match
      """
      ANY: [WoofFilterInput]
    }

    """
    Search filter input for String type.
    """
    input StringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: String
      """
      The value is not the one given
      """
      ne: String
      """
      The value is greater than the one given
      """
      gt: String
      """
      The value is less than the one given
      """
      lt: String
      """
      The value is greater than, or equal to the one given
      """
      gte: String
      """
      The value is less than, or equal to the one given
      """
      lte: String
      """
      The given input is part of the column value
      """
      like: String
      """
      The value is in the given array of values
      """
      in: [String!]
      """
      The value is not in the given array of values
      """
      nin: [String!]
      """
      A negation of the given filter
      """
      not: StringFilterInput
    }

    """
    Update input for String type.
    """
    input StringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: String
    }

    """
    Update input for String array type.
    """
    input StringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [String]
      """
      Append an array value to the column.
      """
      append: [String]
      """
      Prepend an array value to the column.
      """
      prepend: [String]
    }

    """
    Search filter input for BigInt type.
    """
    input BigIntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BigInt
      """
      The value is not the one given
      """
      ne: BigInt
      """
      The value is greater than the one given
      """
      gt: BigInt
      """
      The value is less than the one given
      """
      lt: BigInt
      """
      The value is greater than, or equal to the one given
      """
      gte: BigInt
      """
      The value is less than, or equal to the one given
      """
      lte: BigInt
      """
      The value is in the given array of values
      """
      in: [BigInt!]
      """
      The value is not in the given array of values
      """
      nin: [BigInt!]
      """
      A negation of the given filter
      """
      not: BigIntFilterInput
    }

    """
    Update input for BigInt type.
    """
    input BigIntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BigInt
      """
      Increments the value of a field by the specified value.
      """
      increment: BigInt
      """
      Decrements the value of a field by the specified value.
      """
      decrement: BigInt
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: BigInt
      """
      Divides the value of a field by the specified value.
      """
      divide: BigInt
    }

    """
    Update input for BigInt array type.
    """
    input BigIntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BigInt]
      """
      Append an array value to the column.
      """
      append: [BigInt]
      """
      Prepend an array value to the column.
      """
      prepend: [BigInt]
    }

    """
    Search filter input for Int type.
    """
    input IntFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Int
      """
      The value is not the one given
      """
      ne: Int
      """
      The value is greater than the one given
      """
      gt: Int
      """
      The value is less than the one given
      """
      lt: Int
      """
      The value is greater than, or equal to the one given
      """
      gte: Int
      """
      The value is less than, or equal to the one given
      """
      lte: Int
      """
      The value is in the given array of values
      """
      in: [Int!]
      """
      The value is not in the given array of values
      """
      nin: [Int!]
      """
      A negation of the given filter
      """
      not: IntFilterInput
    }

    """
    Update input for Int type.
    """
    input IntUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Int
      """
      Increments the value of a field by the specified value.
      """
      increment: Int
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Int
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Int
      """
      Divides the value of a field by the specified value.
      """
      divide: Int
    }

    """
    Update input for Int array type.
    """
    input IntArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Int]
      """
      Append an array value to the column.
      """
      append: [Int]
      """
      Prepend an array value to the column.
      """
      prepend: [Int]
    }

    """
    Search filter input for Float type.
    """
    input FloatFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Float
      """
      The value is not the one given
      """
      ne: Float
      """
      The value is greater than the one given
      """
      gt: Float
      """
      The value is less than the one given
      """
      lt: Float
      """
      The value is greater than, or equal to the one given
      """
      gte: Float
      """
      The value is less than, or equal to the one given
      """
      lte: Float
      """
      The value is in the given array of values
      """
      in: [Float!]
      """
      The value is not in the given array of values
      """
      nin: [Float!]
      """
      A negation of the given filter
      """
      not: FloatFilterInput
    }

    """
    Update input for Float type.
    """
    input FloatUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Float
      """
      Increments the value of a field by the specified value.
      """
      increment: Float
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Float
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Float
      """
      Divides the value of a field by the specified value.
      """
      divide: Float
    }

    """
    Update input for Float array type.
    """
    input FloatArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Float]
      """
      Append an array value to the column.
      """
      append: [Float]
      """
      Prepend an array value to the column.
      """
      prepend: [Float]
    }

    """
    Search filter input for Boolean type.
    """
    input BooleanFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Boolean
      """
      The value is not the one given
      """
      ne: Boolean
      """
      The value is greater than the one given
      """
      gt: Boolean
      """
      The value is less than the one given
      """
      lt: Boolean
      """
      The value is greater than, or equal to the one given
      """
      gte: Boolean
      """
      The value is less than, or equal to the one given
      """
      lte: Boolean
      """
      The value is in the given array of values
      """
      in: [Boolean!]
      """
      The value is not in the given array of values
      """
      nin: [Boolean!]
      """
      A negation of the given filter
      """
      not: BooleanFilterInput
    }

    """
    Update input for Boolean type.
    """
    input BooleanUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Boolean
    }

    """
    Update input for Boolean array type.
    """
    input BooleanArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Boolean]
      """
      Append an array value to the column.
      """
      append: [Boolean]
      """
      Prepend an array value to the column.
      """
      prepend: [Boolean]
    }

    """
    Search filter input for Decimal type.
    """
    input DecimalFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Decimal
      """
      The value is not the one given
      """
      ne: Decimal
      """
      The value is greater than the one given
      """
      gt: Decimal
      """
      The value is less than the one given
      """
      lt: Decimal
      """
      The value is greater than, or equal to the one given
      """
      gte: Decimal
      """
      The value is less than, or equal to the one given
      """
      lte: Decimal
      """
      The value is in the given array of values
      """
      in: [Decimal!]
      """
      The value is not in the given array of values
      """
      nin: [Decimal!]
      """
      A negation of the given filter
      """
      not: DecimalFilterInput
    }

    """
    Update input for Decimal type.
    """
    input DecimalUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Decimal
      """
      Increments the value of a field by the specified value.
      """
      increment: Decimal
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Decimal
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Decimal
      """
      Divides the value of a field by the specified value.
      """
      divide: Decimal
    }

    """
    Update input for Decimal array type.
    """
    input DecimalArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Decimal]
      """
      Append an array value to the column.
      """
      append: [Decimal]
      """
      Prepend an array value to the column.
      """
      prepend: [Decimal]
    }

    """
    Search filter input for Bytes type.
    """
    input BytesFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Bytes
      """
      The value is not the one given
      """
      ne: Bytes
      """
      The value is greater than the one given
      """
      gt: Bytes
      """
      The value is less than the one given
      """
      lt: Bytes
      """
      The value is greater than, or equal to the one given
      """
      gte: Bytes
      """
      The value is less than, or equal to the one given
      """
      lte: Bytes
      """
      The value is in the given array of values
      """
      in: [Bytes!]
      """
      The value is not in the given array of values
      """
      nin: [Bytes!]
      """
      A negation of the given filter
      """
      not: BytesFilterInput
    }

    """
    Update input for Bytes type.
    """
    input BytesUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Bytes
    }

    """
    Update input for Bytes array type.
    """
    input BytesArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Bytes]
      """
      Append an array value to the column.
      """
      append: [Bytes]
      """
      Prepend an array value to the column.
      """
      prepend: [Bytes]
    }

    """
    Search filter input for JSON type.
    """
    input JSONFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: JSON
      """
      The value is not the one given
      """
      ne: JSON
      """
      The value is greater than the one given
      """
      gt: JSON
      """
      The value is less than the one given
      """
      lt: JSON
      """
      The value is greater than, or equal to the one given
      """
      gte: JSON
      """
      The value is less than, or equal to the one given
      """
      lte: JSON
      """
      The value is in the given array of values
      """
      in: [JSON!]
      """
      The value is not in the given array of values
      """
      nin: [JSON!]
      """
      A negation of the given filter
      """
      not: JSONFilterInput
    }

    """
    Update input for JSON type.
    """
    input JSONUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: JSON
      """
      Append JSON value to the column.
      """
      append: JSON
      """
      Prepend JSON value to the column.
      """
      prepend: JSON
      """
      Deletes a key (and its value) from a JSON object, or matching string value(s) from a JSON array.
      """
      deleteKey: String
      """
      Deletes the array element with specified index (negative integers count from the end). Throws an error if JSON value is not an array.
      """
      deleteElem: Int
      """
      Deletes the field or array element at the specified path, where path elements can be either field keys or array indexes.
      """
      deleteAtPath: [String!]
    }

    """
    Update input for JSON array type.
    """
    input JSONArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [JSON]
      """
      Append an array value to the column.
      """
      append: [JSON]
      """
      Prepend an array value to the column.
      """
      prepend: [JSON]
    }

    """
    Search filter input for UUID type.
    """
    input UUIDFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: UUID
      """
      The value is not the one given
      """
      ne: UUID
      """
      The value is greater than the one given
      """
      gt: UUID
      """
      The value is less than the one given
      """
      lt: UUID
      """
      The value is greater than, or equal to the one given
      """
      gte: UUID
      """
      The value is less than, or equal to the one given
      """
      lte: UUID
      """
      The value is in the given array of values
      """
      in: [UUID!]
      """
      The value is not in the given array of values
      """
      nin: [UUID!]
      """
      A negation of the given filter
      """
      not: UUIDFilterInput
    }

    """
    Update input for UUID type.
    """
    input UUIDUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: UUID
    }

    """
    Update input for UUID array type.
    """
    input UUIDArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [UUID]
      """
      Append an array value to the column.
      """
      append: [UUID]
      """
      Prepend an array value to the column.
      """
      prepend: [UUID]
    }

    """
    Search filter input for Date type.
    """
    input DateFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Date
      """
      The value is not the one given
      """
      ne: Date
      """
      The value is greater than the one given
      """
      gt: Date
      """
      The value is less than the one given
      """
      lt: Date
      """
      The value is greater than, or equal to the one given
      """
      gte: Date
      """
      The value is less than, or equal to the one given
      """
      lte: Date
      """
      The value is in the given array of values
      """
      in: [Date!]
      """
      The value is not in the given array of values
      """
      nin: [Date!]
      """
      A negation of the given filter
      """
      not: DateFilterInput
    }

    """
    Update input for Date type.
    """
    input DateUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Date
    }

    """
    Update input for Date array type.
    """
    input DateArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Date]
      """
      Append an array value to the column.
      """
      append: [Date]
      """
      Prepend an array value to the column.
      """
      prepend: [Date]
    }

    """
    Search filter input for Time type.
    """
    input TimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Time
      """
      The value is not the one given
      """
      ne: Time
      """
      The value is greater than the one given
      """
      gt: Time
      """
      The value is less than the one given
      """
      lt: Time
      """
      The value is greater than, or equal to the one given
      """
      gte: Time
      """
      The value is less than, or equal to the one given
      """
      lte: Time
      """
      The value is in the given array of values
      """
      in: [Time!]
      """
      The value is not in the given array of values
      """
      nin: [Time!]
      """
      A negation of the given filter
      """
      not: TimeFilterInput
    }

    """
    Update input for Time type.
    """
    input TimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Time
    }

    """
    Update input for Time array type.
    """
    input TimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Time]
      """
      Append an array value to the column.
      """
      append: [Time]
      """
      Prepend an array value to the column.
      """
      prepend: [Time]
    }

    """
    Search filter input for TimeWithTimezone type.
    """
    input TimeWithTimezoneFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: TimeWithTimezone
      """
      The value is not the one given
      """
      ne: TimeWithTimezone
      """
      The value is greater than the one given
      """
      gt: TimeWithTimezone
      """
      The value is less than the one given
      """
      lt: TimeWithTimezone
      """
      The value is greater than, or equal to the one given
      """
      gte: TimeWithTimezone
      """
      The value is less than, or equal to the one given
      """
      lte: TimeWithTimezone
      """
      The value is in the given array of values
      """
      in: [TimeWithTimezone!]
      """
      The value is not in the given array of values
      """
      nin: [TimeWithTimezone!]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneFilterInput
    }

    """
    Update input for TimeWithTimezone type.
    """
    input TimeWithTimezoneUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: TimeWithTimezone
    }

    """
    Update input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [TimeWithTimezone]
      """
      Append an array value to the column.
      """
      append: [TimeWithTimezone]
      """
      Prepend an array value to the column.
      """
      prepend: [TimeWithTimezone]
    }

    """
    Search filter input for Timestamp type.
    """
    input TimestampFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Timestamp
      """
      The value is not the one given
      """
      ne: Timestamp
      """
      The value is greater than the one given
      """
      gt: Timestamp
      """
      The value is less than the one given
      """
      lt: Timestamp
      """
      The value is greater than, or equal to the one given
      """
      gte: Timestamp
      """
      The value is less than, or equal to the one given
      """
      lte: Timestamp
      """
      The value is in the given array of values
      """
      in: [Timestamp!]
      """
      The value is not in the given array of values
      """
      nin: [Timestamp!]
      """
      A negation of the given filter
      """
      not: TimestampFilterInput
    }

    """
    Update input for Timestamp type.
    """
    input TimestampUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Timestamp
    }

    """
    Update input for Timestamp array type.
    """
    input TimestampArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Timestamp]
      """
      Append an array value to the column.
      """
      append: [Timestamp]
      """
      Prepend an array value to the column.
      """
      prepend: [Timestamp]
    }

    """
    Search filter input for DateTime type.
    """
    input DateTimeFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: DateTime
      """
      The value is not the one given
      """
      ne: DateTime
      """
      The value is greater than the one given
      """
      gt: DateTime
      """
      The value is less than the one given
      """
      lt: DateTime
      """
      The value is greater than, or equal to the one given
      """
      gte: DateTime
      """
      The value is less than, or equal to the one given
      """
      lte: DateTime
      """
      The value is in the given array of values
      """
      in: [DateTime!]
      """
      The value is not in the given array of values
      """
      nin: [DateTime!]
      """
      A negation of the given filter
      """
      not: DateTimeFilterInput
    }

    """
    Update input for DateTime type.
    """
    input DateTimeUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: DateTime
    }

    """
    Update input for DateTime array type.
    """
    input DateTimeArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [DateTime]
      """
      Append an array value to the column.
      """
      append: [DateTime]
      """
      Prepend an array value to the column.
      """
      prepend: [DateTime]
    }

    """
    Search filter input for Inet type.
    """
    input InetFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Inet
      """
      The value is not the one given
      """
      ne: Inet
      """
      The value is greater than the one given
      """
      gt: Inet
      """
      The value is less than the one given
      """
      lt: Inet
      """
      The value is greater than, or equal to the one given
      """
      gte: Inet
      """
      The value is less than, or equal to the one given
      """
      lte: Inet
      """
      The value is in the given array of values
      """
      in: [Inet!]
      """
      The value is not in the given array of values
      """
      nin: [Inet!]
      """
      A negation of the given filter
      """
      not: InetFilterInput
    }

    """
    Update input for Inet type.
    """
    input InetUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Inet
    }

    """
    Update input for Inet array type.
    """
    input InetArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Inet]
      """
      Append an array value to the column.
      """
      append: [Inet]
      """
      Prepend an array value to the column.
      """
      prepend: [Inet]
    }

    """
    Search filter input for CIDR type.
    """
    input CIDRFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: CIDR
      """
      The value is not the one given
      """
      ne: CIDR
      """
      The value is greater than the one given
      """
      gt: CIDR
      """
      The value is less than the one given
      """
      lt: CIDR
      """
      The value is greater than, or equal to the one given
      """
      gte: CIDR
      """
      The value is less than, or equal to the one given
      """
      lte: CIDR
      """
      The value is in the given array of values
      """
      in: [CIDR!]
      """
      The value is not in the given array of values
      """
      nin: [CIDR!]
      """
      A negation of the given filter
      """
      not: CIDRFilterInput
    }

    """
    Update input for CIDR type.
    """
    input CIDRUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: CIDR
    }

    """
    Update input for CIDR array type.
    """
    input CIDRArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [CIDR]
      """
      Append an array value to the column.
      """
      append: [CIDR]
      """
      Prepend an array value to the column.
      """
      prepend: [CIDR]
    }

    """
    Search filter input for MacAddr type.
    """
    input MacAddrFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: MacAddr
      """
      The value is not the one given
      """
      ne: MacAddr
      """
      The value is greater than the one given
      """
      gt: MacAddr
      """
      The value is less than the one given
      """
      lt: MacAddr
      """
      The value is greater than, or equal to the one given
      """
      gte: MacAddr
      """
      The value is less than, or equal to the one given
      """
      lte: MacAddr
      """
      The value is in the given array of values
      """
      in: [MacAddr!]
      """
      The value is not in the given array of values
      """
      nin: [MacAddr!]
      """
      A negation of the given filter
      """
      not: MacAddrFilterInput
    }

    """
    Update input for MacAddr type.
    """
    input MacAddrUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: MacAddr
    }

    """
    Update input for MacAddr array type.
    """
    input MacAddrArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [MacAddr]
      """
      Append an array value to the column.
      """
      append: [MacAddr]
      """
      Prepend an array value to the column.
      """
      prepend: [MacAddr]
    }

    """
    Search filter input for Money type.
    """
    input MoneyFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: Money
      """
      The value is not the one given
      """
      ne: Money
      """
      The value is greater than the one given
      """
      gt: Money
      """
      The value is less than the one given
      """
      lt: Money
      """
      The value is greater than, or equal to the one given
      """
      gte: Money
      """
      The value is less than, or equal to the one given
      """
      lte: Money
      """
      The value is in the given array of values
      """
      in: [Money!]
      """
      The value is not in the given array of values
      """
      nin: [Money!]
      """
      A negation of the given filter
      """
      not: MoneyFilterInput
    }

    """
    Update input for Money type.
    """
    input MoneyUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: Money
      """
      Increments the value of a field by the specified value.
      """
      increment: Money
      """
      Decrements the value of a field by the specified value.
      """
      decrement: Money
      """
      Multiplies the value of a field by the specified value.
      """
      multiply: Money
      """
      Divides the value of a field by the specified value.
      """
      divide: Money
    }

    """
    Update input for Money array type.
    """
    input MoneyArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [Money]
      """
      Append an array value to the column.
      """
      append: [Money]
      """
      Prepend an array value to the column.
      """
      prepend: [Money]
    }

    """
    Search filter input for BitString type.
    """
    input BitStringFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: BitString
      """
      The value is not the one given
      """
      ne: BitString
      """
      The value is greater than the one given
      """
      gt: BitString
      """
      The value is less than the one given
      """
      lt: BitString
      """
      The value is greater than, or equal to the one given
      """
      gte: BitString
      """
      The value is less than, or equal to the one given
      """
      lte: BitString
      """
      The value is in the given array of values
      """
      in: [BitString!]
      """
      The value is not in the given array of values
      """
      nin: [BitString!]
      """
      A negation of the given filter
      """
      not: BitStringFilterInput
    }

    """
    Update input for BitString type.
    """
    input BitStringUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: BitString
    }

    """
    Update input for BitString array type.
    """
    input BitStringArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [BitString]
      """
      Append an array value to the column.
      """
      append: [BitString]
      """
      Prepend an array value to the column.
      """
      prepend: [BitString]
    }

    """
    Search filter input for XML type.
    """
    input XMLFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: XML
      """
      The value is not the one given
      """
      ne: XML
      """
      The value is greater than the one given
      """
      gt: XML
      """
      The value is less than the one given
      """
      lt: XML
      """
      The value is greater than, or equal to the one given
      """
      gte: XML
      """
      The value is less than, or equal to the one given
      """
      lte: XML
      """
      The value is in the given array of values
      """
      in: [XML!]
      """
      The value is not in the given array of values
      """
      nin: [XML!]
      """
      A negation of the given filter
      """
      not: XMLFilterInput
    }

    """
    Update input for XML type.
    """
    input XMLUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: XML
    }

    """
    Update input for XML array type.
    """
    input XMLArrayUpdateInput @oneOf {
      """
      Replaces the value of a field with the specified value.
      """
      set: [XML]
      """
      Append an array value to the column.
      """
      append: [XML]
      """
      Prepend an array value to the column.
      """
      prepend: [XML]
    }

    """
    Search filter input for String array type.
    """
    input StringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [String]
      """
      The value is not the one given
      """
      ne: [String]
      """
      The value is greater than the one given
      """
      gt: [String]
      """
      The value is less than the one given
      """
      lt: [String]
      """
      The value is greater than, or equal to the one given
      """
      gte: [String]
      """
      The value is less than, or equal to the one given
      """
      lte: [String]
      """
      The value is in the given array of values
      """
      in: [[String]!]
      """
      The value is not in the given array of values
      """
      nin: [[String]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [String]
      """
      Checks if the array is contained within the provided array
      """
      contained: [String]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [String]
      """
      A negation of the given filter
      """
      not: StringArrayFilterInput
    }

    """
    Search filter input for Int array type.
    """
    input IntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Int]
      """
      The value is not the one given
      """
      ne: [Int]
      """
      The value is greater than the one given
      """
      gt: [Int]
      """
      The value is less than the one given
      """
      lt: [Int]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Int]
      """
      The value is less than, or equal to the one given
      """
      lte: [Int]
      """
      The value is in the given array of values
      """
      in: [[Int]!]
      """
      The value is not in the given array of values
      """
      nin: [[Int]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Int]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Int]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Int]
      """
      A negation of the given filter
      """
      not: IntArrayFilterInput
    }

    """
    Search filter input for BigInt array type.
    """
    input BigIntArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BigInt]
      """
      The value is not the one given
      """
      ne: [BigInt]
      """
      The value is greater than the one given
      """
      gt: [BigInt]
      """
      The value is less than the one given
      """
      lt: [BigInt]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BigInt]
      """
      The value is less than, or equal to the one given
      """
      lte: [BigInt]
      """
      The value is in the given array of values
      """
      in: [[BigInt]!]
      """
      The value is not in the given array of values
      """
      nin: [[BigInt]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BigInt]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BigInt]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BigInt]
      """
      A negation of the given filter
      """
      not: BigIntArrayFilterInput
    }

    """
    Search filter input for Decimal array type.
    """
    input DecimalArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Decimal]
      """
      The value is not the one given
      """
      ne: [Decimal]
      """
      The value is greater than the one given
      """
      gt: [Decimal]
      """
      The value is less than the one given
      """
      lt: [Decimal]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Decimal]
      """
      The value is less than, or equal to the one given
      """
      lte: [Decimal]
      """
      The value is in the given array of values
      """
      in: [[Decimal]!]
      """
      The value is not in the given array of values
      """
      nin: [[Decimal]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Decimal]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Decimal]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Decimal]
      """
      A negation of the given filter
      """
      not: DecimalArrayFilterInput
    }

    """
    Search filter input for Float array type.
    """
    input FloatArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Float]
      """
      The value is not the one given
      """
      ne: [Float]
      """
      The value is greater than the one given
      """
      gt: [Float]
      """
      The value is less than the one given
      """
      lt: [Float]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Float]
      """
      The value is less than, or equal to the one given
      """
      lte: [Float]
      """
      The value is in the given array of values
      """
      in: [[Float]!]
      """
      The value is not in the given array of values
      """
      nin: [[Float]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Float]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Float]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Float]
      """
      A negation of the given filter
      """
      not: FloatArrayFilterInput
    }

    """
    Search filter input for Boolean array type.
    """
    input BooleanArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Boolean]
      """
      The value is not the one given
      """
      ne: [Boolean]
      """
      The value is greater than the one given
      """
      gt: [Boolean]
      """
      The value is less than the one given
      """
      lt: [Boolean]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Boolean]
      """
      The value is less than, or equal to the one given
      """
      lte: [Boolean]
      """
      The value is in the given array of values
      """
      in: [[Boolean]!]
      """
      The value is not in the given array of values
      """
      nin: [[Boolean]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Boolean]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Boolean]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Boolean]
      """
      A negation of the given filter
      """
      not: BooleanArrayFilterInput
    }

    """
    Search filter input for Bytes array type.
    """
    input BytesArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Bytes]
      """
      The value is not the one given
      """
      ne: [Bytes]
      """
      The value is greater than the one given
      """
      gt: [Bytes]
      """
      The value is less than the one given
      """
      lt: [Bytes]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Bytes]
      """
      The value is less than, or equal to the one given
      """
      lte: [Bytes]
      """
      The value is in the given array of values
      """
      in: [[Bytes]!]
      """
      The value is not in the given array of values
      """
      nin: [[Bytes]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Bytes]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Bytes]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Bytes]
      """
      A negation of the given filter
      """
      not: BytesArrayFilterInput
    }

    """
    Search filter input for JSON array type.
    """
    input JSONArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [JSON]
      """
      The value is not the one given
      """
      ne: [JSON]
      """
      The value is greater than the one given
      """
      gt: [JSON]
      """
      The value is less than the one given
      """
      lt: [JSON]
      """
      The value is greater than, or equal to the one given
      """
      gte: [JSON]
      """
      The value is less than, or equal to the one given
      """
      lte: [JSON]
      """
      The value is in the given array of values
      """
      in: [[JSON]!]
      """
      The value is not in the given array of values
      """
      nin: [[JSON]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [JSON]
      """
      Checks if the array is contained within the provided array
      """
      contained: [JSON]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [JSON]
      """
      A negation of the given filter
      """
      not: JSONArrayFilterInput
    }

    """
    Search filter input for UUID array type.
    """
    input UUIDArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [UUID]
      """
      The value is not the one given
      """
      ne: [UUID]
      """
      The value is greater than the one given
      """
      gt: [UUID]
      """
      The value is less than the one given
      """
      lt: [UUID]
      """
      The value is greater than, or equal to the one given
      """
      gte: [UUID]
      """
      The value is less than, or equal to the one given
      """
      lte: [UUID]
      """
      The value is in the given array of values
      """
      in: [[UUID]!]
      """
      The value is not in the given array of values
      """
      nin: [[UUID]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [UUID]
      """
      Checks if the array is contained within the provided array
      """
      contained: [UUID]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [UUID]
      """
      A negation of the given filter
      """
      not: UUIDArrayFilterInput
    }

    """
    Search filter input for Date array type.
    """
    input DateArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Date]
      """
      The value is not the one given
      """
      ne: [Date]
      """
      The value is greater than the one given
      """
      gt: [Date]
      """
      The value is less than the one given
      """
      lt: [Date]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Date]
      """
      The value is less than, or equal to the one given
      """
      lte: [Date]
      """
      The value is in the given array of values
      """
      in: [[Date]!]
      """
      The value is not in the given array of values
      """
      nin: [[Date]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Date]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Date]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Date]
      """
      A negation of the given filter
      """
      not: DateArrayFilterInput
    }

    """
    Search filter input for Time array type.
    """
    input TimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Time]
      """
      The value is not the one given
      """
      ne: [Time]
      """
      The value is greater than the one given
      """
      gt: [Time]
      """
      The value is less than the one given
      """
      lt: [Time]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Time]
      """
      The value is less than, or equal to the one given
      """
      lte: [Time]
      """
      The value is in the given array of values
      """
      in: [[Time]!]
      """
      The value is not in the given array of values
      """
      nin: [[Time]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Time]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Time]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Time]
      """
      A negation of the given filter
      """
      not: TimeArrayFilterInput
    }

    """
    Search filter input for TimeWithTimezone array type.
    """
    input TimeWithTimezoneArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [TimeWithTimezone]
      """
      The value is not the one given
      """
      ne: [TimeWithTimezone]
      """
      The value is greater than the one given
      """
      gt: [TimeWithTimezone]
      """
      The value is less than the one given
      """
      lt: [TimeWithTimezone]
      """
      The value is greater than, or equal to the one given
      """
      gte: [TimeWithTimezone]
      """
      The value is less than, or equal to the one given
      """
      lte: [TimeWithTimezone]
      """
      The value is in the given array of values
      """
      in: [[TimeWithTimezone]!]
      """
      The value is not in the given array of values
      """
      nin: [[TimeWithTimezone]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [TimeWithTimezone]
      """
      Checks if the array is contained within the provided array
      """
      contained: [TimeWithTimezone]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [TimeWithTimezone]
      """
      A negation of the given filter
      """
      not: TimeWithTimezoneArrayFilterInput
    }

    """
    Search filter input for Timestamp array type.
    """
    input TimestampArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Timestamp]
      """
      The value is not the one given
      """
      ne: [Timestamp]
      """
      The value is greater than the one given
      """
      gt: [Timestamp]
      """
      The value is less than the one given
      """
      lt: [Timestamp]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Timestamp]
      """
      The value is less than, or equal to the one given
      """
      lte: [Timestamp]
      """
      The value is in the given array of values
      """
      in: [[Timestamp]!]
      """
      The value is not in the given array of values
      """
      nin: [[Timestamp]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Timestamp]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Timestamp]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Timestamp]
      """
      A negation of the given filter
      """
      not: TimestampArrayFilterInput
    }

    """
    Search filter input for DateTime array type.
    """
    input DateTimeArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [DateTime]
      """
      The value is not the one given
      """
      ne: [DateTime]
      """
      The value is greater than the one given
      """
      gt: [DateTime]
      """
      The value is less than the one given
      """
      lt: [DateTime]
      """
      The value is greater than, or equal to the one given
      """
      gte: [DateTime]
      """
      The value is less than, or equal to the one given
      """
      lte: [DateTime]
      """
      The value is in the given array of values
      """
      in: [[DateTime]!]
      """
      The value is not in the given array of values
      """
      nin: [[DateTime]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [DateTime]
      """
      Checks if the array is contained within the provided array
      """
      contained: [DateTime]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [DateTime]
      """
      A negation of the given filter
      """
      not: DateTimeArrayFilterInput
    }

    """
    Search filter input for Inet array type.
    """
    input InetArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Inet]
      """
      The value is not the one given
      """
      ne: [Inet]
      """
      The value is greater than the one given
      """
      gt: [Inet]
      """
      The value is less than the one given
      """
      lt: [Inet]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Inet]
      """
      The value is less than, or equal to the one given
      """
      lte: [Inet]
      """
      The value is in the given array of values
      """
      in: [[Inet]!]
      """
      The value is not in the given array of values
      """
      nin: [[Inet]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Inet]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Inet]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Inet]
      """
      A negation of the given filter
      """
      not: InetArrayFilterInput
    }

    """
    Search filter input for CIDR array type.
    """
    input CIDRArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [CIDR]
      """
      The value is not the one given
      """
      ne: [CIDR]
      """
      The value is greater than the one given
      """
      gt: [CIDR]
      """
      The value is less than the one given
      """
      lt: [CIDR]
      """
      The value is greater than, or equal to the one given
      """
      gte: [CIDR]
      """
      The value is less than, or equal to the one given
      """
      lte: [CIDR]
      """
      The value is in the given array of values
      """
      in: [[CIDR]!]
      """
      The value is not in the given array of values
      """
      nin: [[CIDR]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [CIDR]
      """
      Checks if the array is contained within the provided array
      """
      contained: [CIDR]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [CIDR]
      """
      A negation of the given filter
      """
      not: CIDRArrayFilterInput
    }

    """
    Search filter input for MacAddr array type.
    """
    input MacAddrArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [MacAddr]
      """
      The value is not the one given
      """
      ne: [MacAddr]
      """
      The value is greater than the one given
      """
      gt: [MacAddr]
      """
      The value is less than the one given
      """
      lt: [MacAddr]
      """
      The value is greater than, or equal to the one given
      """
      gte: [MacAddr]
      """
      The value is less than, or equal to the one given
      """
      lte: [MacAddr]
      """
      The value is in the given array of values
      """
      in: [[MacAddr]!]
      """
      The value is not in the given array of values
      """
      nin: [[MacAddr]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [MacAddr]
      """
      Checks if the array is contained within the provided array
      """
      contained: [MacAddr]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [MacAddr]
      """
      A negation of the given filter
      """
      not: MacAddrArrayFilterInput
    }

    """
    Search filter input for Money array type.
    """
    input MoneyArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [Money]
      """
      The value is not the one given
      """
      ne: [Money]
      """
      The value is greater than the one given
      """
      gt: [Money]
      """
      The value is less than the one given
      """
      lt: [Money]
      """
      The value is greater than, or equal to the one given
      """
      gte: [Money]
      """
      The value is less than, or equal to the one given
      """
      lte: [Money]
      """
      The value is in the given array of values
      """
      in: [[Money]!]
      """
      The value is not in the given array of values
      """
      nin: [[Money]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [Money]
      """
      Checks if the array is contained within the provided array
      """
      contained: [Money]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [Money]
      """
      A negation of the given filter
      """
      not: MoneyArrayFilterInput
    }

    """
    Search filter input for BitString array type.
    """
    input BitStringArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [BitString]
      """
      The value is not the one given
      """
      ne: [BitString]
      """
      The value is greater than the one given
      """
      gt: [BitString]
      """
      The value is less than the one given
      """
      lt: [BitString]
      """
      The value is greater than, or equal to the one given
      """
      gte: [BitString]
      """
      The value is less than, or equal to the one given
      """
      lte: [BitString]
      """
      The value is in the given array of values
      """
      in: [[BitString]!]
      """
      The value is not in the given array of values
      """
      nin: [[BitString]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [BitString]
      """
      Checks if the array is contained within the provided array
      """
      contained: [BitString]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [BitString]
      """
      A negation of the given filter
      """
      not: BitStringArrayFilterInput
    }

    """
    Search filter input for XML array type.
    """
    input XMLArrayFilterInput @oneOf {
      """
      The value is exactly the one given
      """
      eq: [XML]
      """
      The value is not the one given
      """
      ne: [XML]
      """
      The value is greater than the one given
      """
      gt: [XML]
      """
      The value is less than the one given
      """
      lt: [XML]
      """
      The value is greater than, or equal to the one given
      """
      gte: [XML]
      """
      The value is less than, or equal to the one given
      """
      lte: [XML]
      """
      The value is in the given array of values
      """
      in: [[XML]!]
      """
      The value is not in the given array of values
      """
      nin: [[XML]!]
      """
      Checks if the array contains all elements of the provided array
      """
      contains: [XML]
      """
      Checks if the array is contained within the provided array
      """
      contained: [XML]
      """
      Checks if the array has any elements in common with the provided array
      """
      overlaps: [XML]
      """
      A negation of the given filter
      """
      not: XMLArrayFilterInput
    }

    """
    Information about pagination in a collection of objects
    """
    type PageInfo
      @shareable
    {
      """
      When paginating backwards, are there more items?
      """
      hasPreviousPage: Boolean! @shareable
      """
      When paginating forwards, are there more items?
      """
      hasNextPage: Boolean! @shareable
      """
      The cursor of the first item in the page
      """
      startCursor: String @shareable
      """
      The cursor of the last item in the page
      """
      endCursor: String @shareable
    }

    """
    Return type containing fields of the mutated or created User object
    """
    type UserReturning
      @pgReturning(type: "User")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one User
    """
    type UserCreatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many users
    """
    type UserCreateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one User
    """
    type UserUpdatePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many users
    """
    type UserUpdateManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one User
    """
    type UserDeletePayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: UserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many users
    """
    type UserDeleteManyPayload
      @pgMutation(type: "User")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [UserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type UserEdge {
      """
      The item at the end of the edge
      """
      node: User! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for User
    """
    type UserConnection
      @pgConnection(type: "User")
    {
      """
      A list of edges
      """
      edges: [UserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    Return type containing fields of the mutated or created Loser object
    """
    type LoserReturning
      @pgReturning(type: "Loser")
    {
      """
      The value of the id field
      """
      id: Int! @shareable
    }

    """
    Return type when creating one Loser
    """
    type LoserCreatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when creating many losers
    """
    type LoserCreateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating one Loser
    """
    type LoserUpdatePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when updating many losers
    """
    type LoserUpdateManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting one Loser
    """
    type LoserDeletePayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: LoserReturning @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    Return type when deleting many losers
    """
    type LoserDeleteManyPayload
      @pgMutation(type: "Loser")
    {
      """
      Returned item(s) from the mutation
      """
      returning: [LoserReturning]! @shareable
      """
      The number of rows mutated
      """
      rowCount: Int! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type LoserEdge {
      """
      The item at the end of the edge
      """
      node: Loser! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Loser
    """
    type LoserConnection
      @pgConnection(type: "Loser")
    {
      """
      A list of edges
      """
      edges: [LoserEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    """
    An edge in a connection. Contains the node and its cursor
    """
    type MeowEdge {
      """
      The item at the end of the edge
      """
      node: Meow! @shareable
      """
      A cursor for use in pagination
      """
      cursor: String! @shareable
    }

    """
    The connection type for Meow
    """
    type MeowConnection
      @pgConnection(type: "Meow")
    {
      """
      A list of edges
      """
      edges: [MeowEdge!]! @shareable
      """
      Information to aid in pagination
      """
      pageInfo: PageInfo! @shareable
    }

    type User
      @key(fields: "id")
      @pgTable(name: "users", schema: "a")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Loser
      @key(fields: "id")
      @pgTable(name: "losers", schema: "b")
      @pgKey(fields: ["id"], type: PRIMARY)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Meow
      @key(fields: "id")
      @pgTable(name: "meow", schema: "a", kind: VIEW)
      @pgKey(fields: ["id"], type: UNIQUE)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Woof
      @key(fields: "id")
      @pgTable(name: "woof", schema: "b", kind: VIEW)
      @pgKey(fields: ["id"], type: UNIQUE)
    {
      id: Int! @pgColumn(name: "id", type: INT)
    }

    type Query {
      """
      Query a unique User
      """
      user(
        """
        Input for unique User lookup
        """
        lookup: UserLookupInput!,
      ): User @pgSelectOne
      """
      Query and paginate multiple users
      """
      users(
        """
        Filter for User
        """
        filter: UserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [UserOrderByInput!],
      ): UserConnection! @pgSelectMany
      """
      Lookup multiple users for subgraph joins
      """
      userLookup(
        """
        Filter users with an array of keys
        """
        lookup: UserManyLookupInput @inaccessible,
      ): [User]! @pgLookup @lookup @inaccessible
      """
      Query a unique Loser
      """
      loser(
        """
        Input for unique Loser lookup
        """
        lookup: LoserLookupInput!,
      ): Loser @pgSelectOne
      """
      Query and paginate multiple losers
      """
      losers(
        """
        Filter for Loser
        """
        filter: LoserFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [LoserOrderByInput!],
      ): LoserConnection! @pgSelectMany
      """
      Lookup multiple losers for subgraph joins
      """
      loserLookup(
        """
        Filter losers with an array of keys
        """
        lookup: LoserManyLookupInput @inaccessible,
      ): [Loser]! @pgLookup @lookup @inaccessible
      """
      Query a unique Meow
      """
      meow(
        """
        Input for unique Meow lookup
        """
        lookup: MeowLookupInput!,
      ): Meow @pgSelectOne
      """
      Query and paginate multiple meows
      """
      meows(
        """
        Filter for Meow
        """
        filter: MeowFilterInput,
        """
        Limit the number of results, from the beginning
        """
        first: Int,
        """
        Limit the number of results, from the end
        """
        last: Int,
        """
        Cursor for pagination, select items before the cursor. Use together with `last`.
        """
        before: String,
        """
        Cursor for pagination, select items after the cursor. Use together with `first`.
        """
        after: String,
        """
        Order the results by selected fields
        """
        orderBy: [MeowOrderByInput!],
      ): MeowConnection! @pgSelectMany
      """
      Lookup multiple meows for subgraph joins
      """
      meowLookup(
        """
        Filter meows with an array of keys
        """
        lookup: MeowManyLookupInput @inaccessible,
      ): [Meow]! @pgLookup @lookup @inaccessible
    }

    type Mutation {
      """
      Create a single User
      """
      userCreate(
        """
        Input for creating a single User
        """
        input: UserCreateInput!,
      ): UserCreatePayload! @pgInsertOne
      """
      Create multiple users
      """
      userCreateMany(
        """
        Input for creating multiple User instances
        """
        input: [UserCreateInput!]!,
      ): UserCreateManyPayload! @pgInsertMany
      """
      Update a unique User
      """
      userUpdate(
        """
        Lookup input for unique User update
        """
        lookup: UserLookupInput!,
        """
        Input for updating a User
        """
        input: UserUpdateInput!,
      ): UserUpdatePayload! @pgUpdateOne
      """
      Update multiple users
      """
      userUpdateMany(
        """
        Filter for updating multiple User instances
        """
        filter: UserFilterInput,
        """
        Input for updating multiple User instances
        """
        input: UserUpdateInput!,
      ): UserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique User
      """
      userDelete(
        """
        Lookup input for unique User deletion
        """
        lookup: UserLookupInput!,
      ): UserDeletePayload! @pgDeleteOne
      """
      Delete multiple users
      """
      userDeleteMany(
        """
        Filter for User deletion
        """
        filter: UserFilterInput,
      ): UserDeleteManyPayload! @pgDeleteMany
      """
      Create a single Loser
      """
      loserCreate(
        """
        Input for creating a single Loser
        """
        input: LoserCreateInput!,
      ): LoserCreatePayload! @pgInsertOne
      """
      Create multiple losers
      """
      loserCreateMany(
        """
        Input for creating multiple Loser instances
        """
        input: [LoserCreateInput!]!,
      ): LoserCreateManyPayload! @pgInsertMany
      """
      Update a unique Loser
      """
      loserUpdate(
        """
        Lookup input for unique Loser update
        """
        lookup: LoserLookupInput!,
        """
        Input for updating a Loser
        """
        input: LoserUpdateInput!,
      ): LoserUpdatePayload! @pgUpdateOne
      """
      Update multiple losers
      """
      loserUpdateMany(
        """
        Filter for updating multiple Loser instances
        """
        filter: LoserFilterInput,
        """
        Input for updating multiple Loser instances
        """
        input: LoserUpdateInput!,
      ): LoserUpdateManyPayload! @pgUpdateMany
      """
      Delete a unique Loser
      """
      loserDelete(
        """
        Lookup input for unique Loser deletion
        """
        lookup: LoserLookupInput!,
      ): LoserDeletePayload! @pgDeleteOne
      """
      Delete multiple losers
      """
      loserDeleteMany(
        """
        Filter for Loser deletion
        """
        filter: LoserFilterInput,
      ): LoserDeleteManyPayload! @pgDeleteMany
    }
    "#);
}
